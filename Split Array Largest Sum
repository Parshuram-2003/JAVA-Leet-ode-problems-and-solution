https://leetcode.com/problems/split-array-largest-sum/description/

class Solution {
    public int splitArray(int[] nums, int k) {
          int start=0;
        int end=0;

        for(int i=0; i< nums.length; i++){
            start= Math.max(start, nums[i]);//at the end of the loop this will return the max element in the array
            end += nums[i];

        }

        //binary search
        while(start< end){

            int mid= start +(end-start)/2;
            //calculate how many pieces you can dive the array so that the sum of each sub arrays does not exceed the mid value
            int sum=0;
            int pieces=1;
            //for each loop
            for(int num: nums){
                if(sum+num> mid){
                    //you can not add this in this sub-array, make new one
                    //say you add this in new subarray , then sum=num
                    sum = num;
                    pieces++;
                }else{
                    sum += num;
                }

            }
            if(pieces> k){
                start= mid+1;
            } else{
                end=mid;
            }

        }
        return end; //here start=end
        
    }
}
